#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <sys/wait.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <sys/types.h>
#include <unistd.h>
#include <ctype.h>

#define KEY 10101

#define LEN 100

struct mymsgbuf
{
    long tip;
    char linija[LEN];
};

void salji(int msqid, int tip, char* fajl)
{
    struct mymsgbuf buf;

    FILE* f = fopen(fajl, "r");

        if(f==0)
        {
            printf("problem sa fajlom");
            exit(1);
        }

        char linija[LEN];
        buf.tip=tip;

        while(fgets(linija, LEN, f))
        {
            strcpy(buf.linija, linija);
            msgsnd(msqid, &buf, sizeof(buf)-sizeof(long), 0);
        }

        strcpy(buf.linija, "KRAJ");
        msgsnd(msqid, &buf, sizeof(buf)-sizeof(long), 0);
}

int main()
{
    int msqid = msgget(KEY, 0666 | IPC_CREAT);

    struct mymsgbuf buf;

    int pid1=fork();

    if(pid1==0)
    {
       salji(msqid, 1, "prva.txt");
       return 0;
    }

    int pid2=fork();

    if(pid2==0)
    {
        salji(msqid, 2, "druga.txt");
       return 0;
    }

        FILE* f1 = fopen("prva_mod.txt", "w");
        if(f1==0)
        {
            printf("problem sa fajlom");
            exit(1);
        }

        FILE* f2 = fopen("druga_mod.txt", "w");
        if(f2==0)
        {
            printf("problem sa fajlom");
            exit(1);
        }

        int kraj=0;

        while(1)
        {

            if(kraj==2)
                break;


            msgrcv(msqid, &buf, sizeof(buf)-sizeof(long), 0, 0);

            if(strcmp(buf.linija, "KRAJ")==0)
            {
                if(buf.tip==1)
                    kraj++;
                else if(buf.tip==2)
                    kraj++;
                continue;
            }

           
            if(buf.tip==1)
            {
                for(int i = 0; i<strlen(buf.linija); i++)
                {
                    if(buf.linija[i]>='a' && buf.linija[i]<='z')
                        buf.linija[i]=toupper(buf.linija[i]);
                }

                fprintf(f1, "%s", buf.linija);
            }
            else if(buf.tip==2)
            {
                for(int i = 0; i<strlen(buf.linija); i++)
                {
                    if(buf.linija[i]>='A' && buf.linija[i]<='Z')
                        buf.linija[i]=tolower(buf.linija[i]);
                }

                fprintf(f2, "%s", buf.linija);
            }
            
        }

        wait(NULL);
        wait(NULL);

        msgctl(msqid, IPC_RMID, NULL);

        fclose(f1);
        fclose(f2);
    

}
